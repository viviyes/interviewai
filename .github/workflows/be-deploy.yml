name: Backend Deploy (GHCR + SSH rolling)

on:
  push:
    branches: ["main"]
    paths:
      - "backend/**"
      - ".github/workflows/be-deploy.yml"
  workflow_dispatch: {}

concurrency:
  group: be-deploy
  cancel-in-progress: true

permissions:
  contents: read
  packages: write # allow pushing to GHCR

jobs:
  build-push:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}-backend
          tags: |
            type=raw,value=latest
            type=sha

      - name: Build and Push
        uses: docker/build-push-action@v6
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy-via-ssh:
    needs: build-push
    runs-on: ubuntu-latest
    steps:
      - name: SSH to VM & rollout (docker compose pull/up + nginx reload)
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          command_timeout: 30m
          timeout: 60s
          script: |
            # if VM is not logged in to GHCR, login (recommended to login manually on VM and save)
            if ! docker pull ghcr.io/${{ github.repository }}-backend:latest >/dev/null 2>&1; then
              echo "${{ secrets.GHCR_READ_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
            fi

            # pull and rollout
            cd /opt/interviewai
            docker compose pull
            docker compose up -d

            # Enhanced health check
            echo "Waiting for container to start..."
            sleep 5
            
            # Check container status
            docker ps -a | grep interviewai-backend
            
            # Check logs for errors
            echo "=== Container Logs ==="
            docker logs --tail 50 interviewai-backend
            
            # Test health endpoint
            echo "=== Testing Health Endpoint ==="
            docker exec interviewai-backend curl -f http://localhost:8000/healthz || echo "Health check failed!"
            
            # Check if port is listening
            echo "=== Port Status ==="
            docker exec interviewai-backend netstat -tuln | grep 8000 || echo "Port 8000 not listening!"

            # verify and reload Nginx
            sudo nginx -t && sudo systemctl reload nginx
